{
  // Editor settings
  "editor.fontSize": 14,
  "editor.lineHeight": 1.8,
  "editor.rulers": [80, 120],
  "editor.renderLineHighlight": "gutter",
  "editor.fontLigatures": true,
  "editor.semanticHighlighting.enabled": false,
  "editor.tabSize": 2,
  "editor.tabCompletion": "on",
  "editor.formatOnSave": true,
  "editor.colorDecorators": true,
  "editor.autoClosingBrackets": "always",
  "editor.autoClosingQuotes": "always",
  "editor.autoClosingDelete": "always",
  "html.autoClosingTags": true,
  "editor.renderWhitespace": "selection",
  "editor.copyWithSyntaxHighlighting": false,
  "editor.emptySelectionClipboard": false,
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.snippetSuggestions": "top",
  "editor.detectIndentation": false,
  "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
  "editor.linkedEditing": true,
  "editor.inlineSuggest.suppressSuggestions": true,
  "editor.minimap.enabled": false,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.smoothScrolling": true,
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.stickyScroll.enabled": true,

  // Workbench settings
  "workbench.startupEditor": "newUntitledFile",
  "workbench.editor.labelFormat": "short",
  "workbench.statusBar.visible": true,
  "workbench.editor.enablePreview": false,
  "workbench.tree.indent": 14,
  "workbench.layoutControl.enabled": false,
  "workbench.activityBar.location": "top",
  "workbench.sideBar.location": "right",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.list.smoothScrolling": true,

  // Explorer settings
  "explorer.compactFolders": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "package.json": "package-lock*, yarn*, pnpm-lock*, vite*, tsconfig*, prettier*, .eslint*",
    "tailwind.config*": "tailwind.config*, postcss.config*",
    ".env.local": ".env*",
    ".env": ".env*"
  },
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  "explorer.sortOrder": "default",

  // Files settings
  "files.associations": {
    "*.js": "javascriptreact",
    "*.vue": "vue"
  },
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.eol": "\n",
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,

  // Window settings
  "window.title": "${rootName}",
  "window.newWindowDimensions": "offset",

  // Search settings
  "search.useIgnoreFiles": true,
  "search.exclude": {
    "**/node_modules": true,
    "**/package-lock*": true,
    "**/yarn*": true,
    "**/pnpm-lock*": true,
    "**/vite*": true,
    "**/tsconfig*": true,
    "**/prettier*": true,
    "**/.eslint*": true,
    "**/.tailwind.config*": true,
    "**/.postcss.config*": true,
    "**/.env*": true,
    "**/.next*": true
  },

  // Git settings
  "git.confirmSync": false,
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.ignoreRebaseWarning": true,

  // Prettier settings
  "prettier.trailingComma": "all",
  "prettier.printWidth": 120,
  "prettier.singleQuote": true,
  "prettier.semi": false,

  // Prettier DefaultFormatter settings
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // Cody settings
  // "cody.chat.preInstruction": "You are allowed to ask anything in case of doubt. Read carefully, breathe, understand step-by-step. Imagine that three different specialists are answering this question. All the specialists will write 1 step of their thoughts, then share this with the group. Then all the specialists will go to the next step, etc. If any specialist realizes that they are wrong at any point, then they leave. The target is to answer the question based on what have they been learned. Use [Tiger Style](https://tigerstyle.dev/) and Cognitive Driven Development while coding. For all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production. By default, this template supports mobile-first and offline-first development, JSX syntax with Module CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them. Use icons from lucide-react for logos. Use stock photos from unsplash where appropriate, only valid URLs you know exist.",
  // "cody.autocomplete.disableInsideComments": true,
  // "cody.edit.preInstruction": "",
  // "cody.debug.filter": " ",
  // "cody.commandHints.enabled": false,
  // "cody.autocomplete.triggerDelay": 5000,
  // "cody.telemetry.level": "off",
  // "cody.autocomplete.formatOnAccept": true,
  // "cody.codeActions.enabled": false,
  // "cody.suggestions.mode": "off",

  // Terminal settings
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.confirmOnKill": "never",
  "terminal.integrated.initialHint": false,
  "terminal.integrated.tabs.enabled": false,

  // Misc settings
  "extensions.ignoreRecommendations": true,
  "breadcrumbs.enabled": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always"
}
